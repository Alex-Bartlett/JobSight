@page "/Developer"
@inject ICompanyService companyService;
@inject IUserService userService;
@inject ILogger<DeveloperSettings> logger;
@inject NavigationManager navigationManager;
@rendermode InteractiveServer
@attribute [Authorize]
@attribute [StreamRendering]

<h3>Developer Settings</h3>

@*Both AuthorizeView and EditForm have a default context of 'context'. It needs to be overridden to prevent ambiguity. https://stackoverflow.com/a/77385623*@
<AuthorizeView Context="AuthContext">
    @if (AllCompanies is null)
    {
        <div>Loading companies...</div>
    }
    else if (CurrentUser is null)
    {
        <div>Please sign in to edit current company.</div>
    }
    else
    {    
        <div class="d-flex flex-column">
            <div><b>User ID: </b>@CurrentUser.Id</div>
            <div><b>Name: </b>@AuthContext.User.Identity?.Name</div>
            <div><b>Current Company: </b>@CurrentUser.CurrentCompany?.Name</div>
        </div>
        <EditForm Model="CurrentUser" OnSubmit="HandleSubmitCurrentCompany" FormName="CompanyForm" class="gap-0 mt-3">
            <label class="form-label" for="currentCompany">Current Company</label>
            <InputSelect @bind-Value="CurrentUser.CurrentCompanyId" class="form-select">
                @if (AllCompanies is not null)
                {
                    <option>-- Select an option --</option>
                    @foreach (Company company in AllCompanies)
                    {
                        @if (CurrentUser.CurrentCompanyId == company.Id)
                        {
                            <option value="@company.Id" selected>@company.Name</option>
                        }
                        else
                        {
                            <option value="@company.Id">@company.Name</option>
                        }
                    }
                }
            </InputSelect>
            @if (ErrorChangingCompany)
            {
                <p class="text-danger m-0">Unable to set company. Does user belong to selected company?</p>
            }
            <div class="mt-3"><button type="submit" class="btn btn-primary w-auto">Save</button></div>
        </EditForm>
    }
</AuthorizeView>

@code {
    [SupplyParameterFromForm(FormName = "CompanyForm")]
    public User CurrentUser { get; set; } = new();

    public IEnumerable<Company>? AllCompanies;

    bool ErrorChangingCompany = false;

    protected override async Task OnInitializedAsync()
    {
        var user = await userService.GetCurrentUserWithNavigationsAsync();
        if (user is not null)
        {
            CurrentUser.Id = user.Id;
            CurrentUser.CurrentCompanyId ??= user.CurrentCompanyId;
            CurrentUser.CurrentCompany = user.CurrentCompany;
        }
        AllCompanies = await companyService.GetAllAsync();
    }

    public async Task HandleSubmitCurrentCompany()
    {
        int? currentCompanyId = CurrentUser?.CurrentCompanyId;

        if (currentCompanyId is not null)
        {
            var res = await userService.ChangeCurrentCompanyAsync(currentCompanyId.Value);
            if (res is not null)
            {
                // Success
                // Reload the page https://stackoverflow.com/a/75747008/22966636
                navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
                return;
            }
        }
        // Fail
        ErrorChangingCompany = true;
    }
}
