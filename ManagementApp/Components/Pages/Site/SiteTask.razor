@page "/site-new-task/{JobId:int}"
@layout SiteLayout
@inject IUserService userService;
@inject NavigationManager navigationManager;
@rendermode InteractiveServer

@if (IsLoading == false && CurrentUser is not null && JobId is not null)
{
    <div class="bg-white rounded p-2">
        @*Show create task form at first, then once created, show image upload*@
        @if (CreatedTask is null)
        {
            <EditTask JobId="JobId" DontRedirectOnSubmit="true" OnTaskCreated="TaskCreated"/> @*Why does it think there's an error here? It works fine?*@
        }
        else {
            <h3>Upload Images</h3>
            <div class="d-flex flex-row flex-wrap">
                @foreach(var taskImage in CreatedTask.Images)
                {
                    <TaskImage JobTaskId="CreatedTask.Id" JobTaskImage="taskImage" />
                }
                <TaskImageUpload JobTaskId="CreatedTask.Id" OnImageUploaded="() => StateHasChanged()" />
            </div>
            <a href="/site-job/@JobId" class="btn btn-primary mt-3 w-100">Submit</a>
        }
    </div>
}
else if (IsLoading == false && JobId is null) 
{
    <p>Job ID not provided</p>
}

@code {
    [Parameter]
    public int? JobId { get; set; }
    public User? CurrentUser { get; set; }

    public JobTask? CreatedTask = null;

    public bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await userService.GetCurrentUserAsync();
        // Redirect the user to the non-mobile page if they are not a site worker
        if (CurrentUser is null || CurrentUser.IsSiteWorker == false)
        {
            navigationManager.NavigateTo("/");
        }
        IsLoading = false;
    }

    public void TaskCreated(JobTask task)
    {
        CreatedTask = task;
    }
}
