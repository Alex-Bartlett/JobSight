@page "/jobs"
@inject IJobService jobService;
@inject IUserService userService;
@attribute [StreamRendering];

<h3>Jobs</h3>
@if (jobs == null)
{
    <span>Loading...</span>
}
else if (jobs.Count() == 0)
{
    <span>No jobs found</span>
}
else
{
    <ul>
        @foreach (Job job in jobs)
        {
            <li>@job.Id</li>
        }
    </ul>
}

@if (job == null)
{
    <span>Not found</span>
}
else {
    <span>@job.Id</span>
}

@code {
    IEnumerable<Job>? jobs = null;
    Job? job = null;
    int? currentCompanyId;

    protected override async Task OnInitializedAsync()
    {
        await SetCurrentCompanyId();
        if (currentCompanyId is not null)
        {
            jobs = await jobService.GetAllAsync(currentCompanyId.Value);
        }
        job = await jobService.GetByIdAsync(1);
    }

    private async Task SetCurrentCompanyId() {
        var user = await userService.GetCurrentUserAsync();
        if (user?.CurrentCompanyId is not null)
        {
            currentCompanyId = user.CurrentCompanyId.Value;
        }
    }
}
